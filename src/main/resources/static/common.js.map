{"version":3,"sources":["webpack:///./src/app/pages/skills/services/skill.service.ts","webpack:///./src/app/pages/user/model/colaborador.model.ts","webpack:///./src/app/pages/user/services/colaborador.service.ts","webpack:///./src/environments/environment.prod.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, throwError } from \"rxjs\";\nimport { map, catchError, flatMap } from \"rxjs/operators\"\nimport { Skill } from '../model/skill.model';\nimport { environment } from 'src/environments/environment.prod';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SkillService {\n\n  private apiPath: string = `${environment.url_api}/skills`;\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Skill[]> {\n    return this.http.get(this.apiPath)\n      .pipe(\n        catchError(this.handleError),\n        map(this.jsonDataToSkills)\n      )\n  }\n\n  getById(id: number): Observable<Skill> {\n    const url = `${this.apiPath}/${id}`\n    return this.http.get(url)\n      .pipe(\n        catchError(this.handleError),\n        map(this.jsonDataToSkill)\n      )\n  }\n\n  create(skill: Skill): Observable<Skill> {\n    return this.http.post(this.apiPath, skill)\n      .pipe(\n        catchError(this.handleError),\n        map(this.jsonDataToSkill)\n      )\n  }\n\n  update(skill: Skill): Observable<Skill> {\n    const url = `${this.apiPath}/${skill.id}`;\n    return this.http.put(url, skill)\n      .pipe(\n        catchError(this.handleError),\n        map(() => skill)\n      )\n  }\n\n  delete(id: number): Observable<any> {\n    const url = `${this.apiPath}/${id}`;\n    return this.http.delete(url)\n      .pipe(\n        catchError(this.handleError),\n        map(() => null)\n      )\n  }\n\n\n  private jsonDataToSkill(jsonData: any): Skill {\n    let json = jsonData as Skill;\n    return json;\n  }\n\n  private jsonDataToSkills(jsonData: any[]): Skill[] {\n    const skills: Skill[] = [];\n    jsonData.forEach(element => skills.push(element as Skill))\n    return skills;\n  }\n\n  private handleError(error: any): Observable<any> {\n    console.log(\"Error na requisição =>\", error)\n    return throwError(error)\n  }\n\n}\n","import { Skill } from \"../../skills/model/skill.model\";\r\n\r\nexport class Colaborador {\r\n    id?: number;\r\n    name?: string;\r\n    email?: string;\r\n    matricula?: string;\r\n    cargo?: string;\r\n    squard?: string;\r\n    skills?: Skill[] = [];\r\n}","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, throwError } from \"rxjs\";\nimport { map, catchError, flatMap } from \"rxjs/operators\"\n\nimport { environment } from 'src/environments/environment.prod';\nimport { Colaborador } from '../model/colaborador.model';\nimport { Skill } from '../../skills/model/skill.model';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColaboradorService {\n\n\n  private apiPath: string = `${environment.url_api}/colaboradores`;\n\n\n  getAllByNameSkill(name: string): Observable<Colaborador[]> {\n    console.log(\"O NOME É: \" + name);\n    return this.http.get(`${this.apiPath}?skill=${name}`)\n      .pipe(\n        catchError(this.handleError),\n        map(this.jsonDataToColaboradores)\n      )\n  }\n\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Colaborador[]> {\n    return this.http.get(`${this.apiPath}?skill=`)\n      .pipe(\n        catchError(this.handleError),\n        map(this.jsonDataToColaboradores)\n      )\n  }\n\n  getById(id: number): Observable<Colaborador> {\n    const url = `${this.apiPath}/${id}`\n    return this.http.get(url)\n      .pipe(\n        catchError(this.handleError),\n        map(this.jsonDataToColaborador)\n      )\n  }\n\n  getByMatricula(matricula: string): Observable<Colaborador> {\n    return this.http.get(`${this.apiPath}/${matricula}/matricula`)\n      .pipe(\n        catchError(this.handleError),\n        map(this.jsonDataToColaborador)\n      )\n  }\n\n\n  update(id: number, skills: Array<Skill>): Observable<Colaborador> {\n    const url = `${this.apiPath}/${id}/skills`;\n    return this.http.put(url, skills)\n      .pipe(\n        catchError(this.handleError),\n        map(this.jsonDataToColaborador)\n      )\n  }\n\n\n  private jsonDataToColaborador(jsonData: any): Colaborador {\n    let json = jsonData as Colaborador;\n    return json;\n  }\n\n  private jsonDataToColaboradores(jsonData: any[]): Colaborador[] {\n    const colaboradores: Colaborador[] = [];\n    jsonData.forEach(element => colaboradores.push(element as Colaborador))\n    return colaboradores;\n  }\n\n  private handleError(error: any): Observable<any> {\n    console.log(\"Error na requisição =>\", error)\n    return throwError(error)\n  }\n\n}\n","import { HttpHeaders } from '@angular/common/http';\n\nexport const environment = {\n  production: true,\n  /* url do servidor*/\n  url_api: 'http://localhost:8080/api/v1',\n\n\n  /* headers - Definindo o Tipo de Conteudo que é Passo no corpo da requisição*/\n  httpOptions: {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n};\n"],"sourceRoot":""}