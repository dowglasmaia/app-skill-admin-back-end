server:
  port: 8005
spring:
  application:
    name: skills-api
  datasource:
    url: jdbc:postgresql://postgre:5432/skill
    username: maia
    password: maiapw
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher


management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
  metrics:
    enable:
      jvm: true
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
    distribution:
      slo:
        http: '5ms,10ms,25ms,50ms,100ms,200ms,300ms,400ms,500ms,1s,2s'
      percentiles-histogram:
        http:
          server:
            requests: true

#Circuit Breaker
resilience4j:
  circuitbreaker:
    instances:
      skills-api:
        slidingWindowType: COUNT_BASED
        registerHealthIndicator: true
        slidingWindowSize: 6
        failureRateThreshold: 50
        slowCallDurationThreshold: 100
        slowCallRateThreshold: 80
        waitDurationInOpenState: 60s
        permittedNumberOfCallsInHalfOpenState: 3
        enableAutomaticTransitionFromOpenToClosedState: true
        transitionFromOpenToClosedStateOnSuccessfulCall: true

info:
  app:
    name: '@project.name@'
    description: '@project.description@'
    version: '@project.version@'
    encoding: '@project.build.sourceEncoding@'
    java:
      version: '@java.version@'


logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
